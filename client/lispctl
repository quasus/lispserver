#!/bin/sh

IO_SOCKET="$HOME/.lispserver/sockets/io-socket"


SBCL=sbcl
SBCL_OPTIONS=
QUICKLISP_SETUP="$HOME"/quicklisp/setup.lisp

start () {
    $SBCL $SBCL_OPTIONS --eval '(require "ASDF")' --eval '(require "SB-BSD-SOCKETS")' --eval '(require "SB-POSIX")' --eval "(load \"$QUICKLISP_SETUP\")" --eval '(asdf:load-system "lisp-server")'  --eval '(lisp-server-dev::init)' --eval '(lisp-server-dev::start)'
}

lisp_eval () {
    lclient "$IO_SOCKET" "$@"
}

cmd="$1"
shift

lisp_say () {
    form="(format t \"~A~%\" $1)"
    shift
    lisp_eval "$form" "$@"
}

# Dependency file:
# first col: name
# second col: lib

unregister () {
    file=$1
    name=$2
    backup_file="$file.old"
    cp "$file" "$backup_file"
    awk '
    BEGIN {
    name = "'"$name"'";
}
$1 != name {print $0;}
' < "$backup_file" > "$file"
}

register () {
    file=$1
    name=$2
    shift; shift
    if [ -f $file ]; then
        backup_file="$file.old"
        cp "$file" "$backup_file"
    else
        backup_file=/dev/null
    fi
    {
        awk -f "$backup_file" -e '$1 != "'"$name"'" { print $0; }' &
        for lib in $@; do
            echo "$name $lib"
        done
    } | sort | uniq > "$file"
}

# register: name [lib*]
# remove what belongs to name, add it with the specified libraries and try to load the libraries

case "$cmd" in
    eval)
        lisp_eval "$@"
        ;;
    say)
        lisp_say "$@"
        ;;
    register)
        {
            name=$1; shift
            deps=$@
            file=`lisp_eval '(write-string (namestring (lisp-server-dev::dependency-file lisp-server-dev::*user-directory*)))'`
            register "$file" "$name" $deps
        } && lisp_eval '(lisp-server-dev::load-libs-safely uiop:*command-line-arguments* :reload nil :quicklisp t)' nil nil $deps
        ;;
    unregister)
        name=$1; shift
        file=`lisp_eval '(write-string (namestring (lisp-server-dev::dependency-file lisp-server-dev::*user-directory*)))'`
        unregister "$file" "$name"
        ;;
    make)
        lisp_make "$@"
        ;;
    install)
        lisp_install "$1"
        ;;
    uninstall)
        lisp_uninstall "$1"
        ;;
    start)
        start
        ;;
    stop)
        lisp_eval '(sb-ext:exit)'
        ;;
    *)
        echo "Unknown command: $cmd."
        exit 1
        ;;
esac

